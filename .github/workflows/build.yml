name: CI Build

on: push

jobs:
  tests:
    name: tests
    runs-on: ubuntu-latest

    # Required for the "JaCoCo code coverage report" step below to not cause an error
    permissions:
      checks: write

    steps:
      - uses: actions/checkout@v4

      - name: Update apt
        run: sudo apt-get update

      - name: Clone the grug submodule
        run: git submodule update --init

      - name: Compile libgrug.so
        run: gcc grug/grug.c -o src/main/resources/natives/libgrug.so -shared -fPIC -Wall -Wextra -Werror -Wpedantic -Wshadow -Wfatal-errors -g -rdynamic

      # To get a list of all the installed Java version, you can add a job that runs `update-alternatives --config java`.
      - name: Compile libglobal_library_loader.so
        run: gcc global_library_loader.c -o src/main/resources/natives/libglobal_library_loader.so -shared -fPIC -Wall -Wextra -Werror -Wpedantic -Wshadow -Wfatal-errors -g -I/usr/lib/jvm/temurin-17-jdk-amd64/include -I/usr/lib/jvm/temurin-17-jdk-amd64/include/linux

      - name: Regenerate adapter.c
        run: python3 grug-adapter-for-java/generate.py mod_api.json adapter.c com/example/examplemod Grug

      - name: Compile libadapter.so
        run: gcc adapter.c -o src/main/resources/natives/libadapter.so -shared -fPIC -Wall -Wextra -Werror -Wpedantic -Wshadow -Wfatal-errors -g -I/usr/lib/jvm/temurin-17-jdk-amd64/include -I/usr/lib/jvm/temurin-17-jdk-amd64/include/linux

      - name: Run the tests
        run: ./gradlew jacocoTestReport

      # Generates coverage-results.md
      - name: JaCoCo code coverage report
        id: jacoco_reporter
        uses: PavanMudigonda/jacoco-reporter@v5.0
        with:
          coverage_results_path: build/reports/jacoco/test/jacocoTestReport.xml
          coverage_report_name: Coverage
          coverage_report_title: JaCoCo
          github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_check_run: false
          minimum_coverage: 80
          fail_below_threshold: false
          publish_only_summary: false

      - name: Add JaCoCo report to workflow run summary
        run: |
          echo "| Outcome | Value |" >> $GITHUB_STEP_SUMMARY
          echo "| --- | --- |" >> $GITHUB_STEP_SUMMARY
          echo "| Code Coverage % | ${{ steps.jacoco_reporter.outputs.coverage_percentage }} |" >> $GITHUB_STEP_SUMMARY
          echo "| :heavy_check_mark: Number of Lines Covered | ${{ steps.jacoco_reporter.outputs.covered_lines }} |" >> $GITHUB_STEP_SUMMARY
          echo "| :x: Number of Lines Missed | ${{ steps.jacoco_reporter.outputs.missed_lines }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Total Number of Lines | ${{ steps.jacoco_reporter.outputs.total_lines }} |" >> $GITHUB_STEP_SUMMARY
